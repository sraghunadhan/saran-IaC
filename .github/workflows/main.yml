name: Saran

on:
  push:
  workflow_dispatch:
    inputs:
      regionName:
            description: 'The region to deploy to'
            required: true
            type: choice
            options:
              - US
              - EU
              - AU
              - APAC

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
 GetBuildMetadata-GetBuildMetadata:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Get Build Metadata
    environment: development
    runs-on: ubuntu-latest
    steps:
    - name: Determining Build Number
      id: determineBuildNumber
      run: |-
         $buildId = "1.0"
      shell: pwsh
 BuildMatrix:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Get matrix objects
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Getmatrixobjects
      id: getmatrixobjects
      run: |
         map={\"EU\":[{\"environment\":\"Global-Adv-DEV-WEU\",\"regionName\":\"weu\",\"subscription\":\"GO-SUB-QA-PLTAIServices\",\"environmentName\":\"kpmgdevglobalemea\",\"agentPoolName\":\"kpmgdev-gac-core-use-windows-dev\"},{\"environment\":\"Global-Adv-test-WEU\",\"regionName\":\"weu\",\"subscription\":\"GO-SUB-Tst-PLTAIServices\",\"environmentName\":\"kpmgTSTglobalemea\",\"agentPoolName\":\"kpmgdev-gac-core-use-windows-dtst\"}],\"US\":[{\"environment\":\"Global-US-Adv-test-WEU\",\"regionName\":\"eus2\",\"subscription\":\"GO-SUB-Tst-PLTUSAIServices\",\"environmentName\":\"kpmgTSTglobalUS\",\"agentPoolName\":\"kpmgdev-gac-core-use-windows-US\"}]}
         echo "matrix=$(jq -r [.${{inputs.regionName}}[].environment])" 
         echo $matrix
      shell: bash
#  Deployment:
#     name: AppDeployment
#     needs: GetBuildMetadata-GetBuildMetadata
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         max-parallel: 1
#         matrix:
#          environment: ${{ fromJson(needs.BuildMatrix.outputs.matrix) }}
      
#     environment: ${{ matrix.environment }}
#     steps:
#         - name: Do something
#           run: echo "Do something"
#         - name : Do something CREDS
#           run: echo map[${{ github.event.inputs.regionName }}].creds
#         - name : Do something AGENT
#           run: echo map[${{ github.event.inputs.regionName }}].agent 
#  PostDeploy:
#     name: Post PostDeploy
#     needs: 
#       - GetBuildMetadata-GetBuildMetadata
#       - Deployment
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#         matrix:
#           environment:
#             - development
#             - qa
#             - cat
#             - uat
#     environment: ${{ matrix.environment }}
    
#     steps:
#         - name: Do something
#           run: echo "Do something post deploy"
